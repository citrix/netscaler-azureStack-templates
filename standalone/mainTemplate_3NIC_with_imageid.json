{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "13.0.0.0",
  "parameters": {
    "virtualMachineName": {
      "defaultValue": "Citrix-ADC-VPX-Express",
      "type": "string",
      "metadata": {
        "description": "Name of the Virtual Machine."
      }
    },
    "virtualMachineSize": {
      "defaultValue": "Standard_DS3_v2",
      "type": "String",
      "allowedValues": [
        "Standard_DS3_v2",
        "Standard_DS4_v2"
      ],
      "metadata": {
        "description": "Size of Azure Virtual Machine."
      }
    },
    "azureStackDomain": {
      "type": "string",
      "metadata": {
        "description": "Please provide TLD. e.g. microsoft.com"
      }
    },
    "azureStackTenant": {
      "type": "string",
      "metadata": {
        "description": "Please provide Tenant name. e.g. customer.onmicrosoft.com"
      }
    },
    "AppRegistrationID": {
        "type": "string",
        "metadata": {
          "description": "Please provide the Azure Client Id."
        }
      },
    "AppRegistrationSecret": {
        "type": "SecureString",
        "metadata": {
          "description": "Please provide the Azure Client Secret."
        }
      },
    "adminUsername": {
      "type": "String",
      "metadata": {
        "description": "Admin user name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "SecureString",
      "metadata": {
        "description": "Admin password for the Virtual Machine."
      }
    },
    "imageid":{
        "type": "String",
        "metadata": {
            "description": "Custom image resource ID."
        }
    },    
    "virtualNetworkName": {
      "defaultValue": "vnet01",
      "type": "String",
      "metadata": {
        "description": "Name of Virtual Network"
      }
    },
    "vnetResourceGroup": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "Resource Group name of existing Virtual Network. Leave empty if Resource Group is same as current deployment."
      }
    },
    "vnetNewOrExisting": {
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "type": "String"
    },
    "networkInterfaceName": {
      "defaultValue": "Citrix-ADC-VPX-Express-Nic",
      "type": "string",
      "metadata": {
        "description": "Name of the Virtual Network Interface Card."
      }
    },
    "networkSecurityGroupName": {
      "defaultValue": "Citrix-ADC--VPX-Express-nsg",
      "type": "string",
      "metadata": {
        "description": "Name of the Network Security Group."
      }
    },
    "diagnosticsStorageAccountName": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Name of the diagnostics Storage Account. If left empty, an auto-generated name will be used."
      }
    },
    "subnetName-management": {
      "defaultValue": "subnet_mgmt",
      "type": "String",
      "metadata": {
        "description": "Name of Management Subnet. Enter existing subnet name if opting for existing Virtual Network"
      }
    },
    "subnetName-client": {
      "defaultValue": "subnet_client",
      "type": "String",
      "metadata": {
        "description": "Name of Client Side subnet. Enter existing subnet name if opting for existing Virtual Network"
      }
    },
    "subnetName-server": {
      "defaultValue": "subnet_server",
      "type": "String",
      "metadata": {
        "description": "Name of Server Side subnet. Enter existing subnet name if opting for existing Virtual Network"
      }
    },
    "subnetAddressPrefix-management": {
      "defaultValue": "10.0.0.0/24",
      "type": "String",
      "metadata": {
        "description": "Value of Management subnet in CIDR form. Ignore this field if opting for existing Virtual Network, Address prefix will be picked from existing Subnet."
      }
    },
    "subnetAddressPrefix-client": {
      "defaultValue": "10.0.1.0/24",
      "type": "String",
      "metadata": {
        "description": "Value of Client side subnet in CIDR form. Ignore this field if opting for existing Virtual Network, Address prefix will be picked from existing Subnet."
      }
    },
    "subnetAddressPrefix-server": {
      "defaultValue": "10.0.2.0/24",
      "type": "String",
      "metadata": {
        "description": "Value of Server Side subnet in CIDR form. Ignore this field if opting for existing Virtual Network, Address prefix will be picked from existing Subnet."
      }
    },
    "baseUrl": {
      "defaultValue": "https://github.com/citrix/netscaler-azure-templates",
      "type": "String",
      "metadata": {
        "artifactsBaseUrl": "",
        "description": "The base URL for dependent assets"
      }
    }
  },
  "variables": {
    "nicN": "[concat(parameters('virtualMachineName'), '-nic')]",
    "nsgN": "[concat(parameters('virtualMachineName'), '-nsg')]",
    "vnetRg": "[if(equals(parameters('vnetResourceGroup'), ''), resourceGroup().name,parameters('vnetResourceGroup'))]",
    "vnetId": "[resourceId(variables('vnetRG'),'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "snetRef-management": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName-management'))]",
    "snetRef-client": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName-client'))]",
    "snetRef-server": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName-server'))]",
    "nicId": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]",
    "diagnosticsStorageAccountName": "[if(equals(parameters('diagnosticsStorageAccountName'), ''), concat('vpxstracct', uniqueString(resourceGroup().id)), parameters('diagnosticsStorageAccountName'))]"
  },
  "resources": [{
      "name": "[parameters('virtualMachineName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2017-12-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicN'), '-management')]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicN'), '-client')]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicN'), '-server')]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[parameters('virtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "customData": "[base64(concat( '{ \"username\": \"', parameters('adminUsername'), '\", \"vpx_config\": {\"location\":\"', resourceGroup().location, '\",\"resourceGroupName\": \"', resourceGroup().name, '\",\"subscriptionId\": \"', subscription().subscriptionId, '\",\"azureStackDomain\":\"', parameters('azureStackDomain'), '\",\"azureStackTenant\":\"', parameters('azureStackTenant'), '\",\"azureClient\":\"', parameters('AppRegistrationID'), '\",\"azureClientSecret\":\"', parameters('AppRegistrationSecret'), '\", \"pvt_ip_11\":\"', reference(concat(variables('nicN'), '-client')).ipConfigurations[0].properties.privateIPAddress ,'\",\"pvt_ip_12\":\"', reference(concat(variables('nicN'), '-server')).ipConfigurations[0].properties.privateIPAddress ,'\",\"subnet_11\":\"', reference(variables('snetRef-client'), '2017-10-01', 'Full').properties.addressPrefix ,'\",\"subnet_12\":\"', reference(variables('snetRef-server'), '2017-10-01', 'Full').properties.addressPrefix, '\", \"ns_features\": [\"LB\", \"CS\", \"SSL\", \"WL\"]}}' ))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
           "imageReference": {
                "id": "[parameters('imageid')]"
            },
          "osDisk": {
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [{
              "id": "[resourceId( 'Microsoft.Network/networkInterfaces', concat(variables('nicN'), '-management'))]",
              "properties": {
                "primary": true
              }
            }, {
              "id": "[resourceId( 'Microsoft.Network/networkInterfaces', concat(variables('nicN'), '-client'))]",
              "properties": {
                "primary": false
              }
            }, {
              "id": "[resourceId( 'Microsoft.Network/networkInterfaces', concat(variables('nicN'), '-server'))]",
              "properties": {
                "primary": false
              }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticsStorageAccountName')), '2017-10-01').primaryEndpoints['blob']]"
          }
        }
      },
      "plan": {
        "name": "netscalerbyol",
        "publisher": "citrix",
        "product": "netscalervpx-130-byol"
      }
    }, {
      "name": "[variables('diagnosticsStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2017-10-01",
      "kind": "Storage",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {}
    }, {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('subnetAddressPrefix-management')]",
            "[parameters('subnetAddressPrefix-client')]",
            "[parameters('subnetAddressPrefix-server')]"
          ]
        },
        "subnets": [{
            "name": "[parameters('subnetName-management')]",
            "properties": {
              "addressPrefix": "[parameters('subnetAddressPrefix-management')]"
            }
          }, {
            "name": "[parameters('subnetName-client')]",
            "properties": {
              "addressPrefix": "[parameters('subnetAddressPrefix-client')]"
            }
          }, {
            "name": "[parameters('subnetName-server')]",
            "properties": {
              "addressPrefix": "[parameters('subnetAddressPrefix-server')]"
            }
          }
        ]
      },
      "condition": "[equals(parameters('vnetNewOrExisting'),'new')]"
    },{
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicN'), '-management')]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [{
            "name": "nsip",
            "properties": {
              "subnet": {
                "id": "[variables('snetRef-management')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat(parameters('virtualMachineName'), '-nsip'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId( 'Microsoft.Network/networkSecurityGroups', concat(variables('nsgN'), '-management'))]"
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIpAddresses/', parameters('virtualMachineName'), '-nsip')]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgN'), '-management')]"
      ]
    }, {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicN'), '-client')]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [{
            "name": "vip",
            "properties": {
              "subnet": {
                "id": "[variables('snetRef-client')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat(parameters('virtualMachineName'), '-vip'))]"
              }

            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId( 'Microsoft.Network/networkSecurityGroups', concat(variables('nsgN'), '-client'))]"
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgN'), '-client')]"
      ]
    }, {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicN'), '-server')]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [{
            "name": "snip",
            "properties": {
              "subnet": {
                "id": "[variables('snetRef-server')]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId( 'Microsoft.Network/networkSecurityGroups', concat(variables('nsgN'), '-server'))]"
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgN'), '-server')]"
      ]
    }, {
      "name": "[concat(parameters('virtualMachineName'), '-vip')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIpAllocationMethod": "Dynamic"
      },
      "sku": {
        "name": "Basic"
      }
    }, {
      "name": "[concat(parameters('virtualMachineName'), '-nsip')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIpAllocationMethod": "Dynamic"
      },
      "sku": {
        "name": "Basic"
      }
    },{
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[concat(variables('nsgN'), '-management')]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [{
            "name": "default-allow-ssh",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "protocol": "TCP",
              "destinationPortRange": "22",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }, {
            "name": "autoscale-daemon",
            "properties": {
              "priority": 1001,
              "sourceAddressPrefix": "*",
              "protocol": "TCP",
              "destinationPortRange": "9001",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    }, {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[concat(variables('nsgN'), '-client')]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [{
            "name": "default-allow-ssh",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "protocol": "TCP",
              "destinationPortRange": "22",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    }, {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[concat(variables('nsgN'), '-server')]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [{
            "name": "default-allow-ssh",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "protocol": "TCP",
              "destinationPortRange": "22",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "virtualMachineName": {
        "type": "string",
        "value": "[parameters('virtualMachineName')]"
    },
    "primaryprivateip" : {
        "type" : "string",
        "value": "[reference(concat(variables('nicN'), '-management')).ipConfigurations[0].properties.privateIPAddress]"
    },
    "subnet_name": {
        "type" : "string",
        "value": "[parameters('subnetName-management')]"
    },
    "network_address_prefix_cidr": {
        "type" : "string",
        "value": "[parameters('subnetAddressPrefix-management')]"
    },
    "subnet_address_prefix_cidr": {
        "type" : "string",
        "value": "[parameters('subnetAddressPrefix-management')]"
    },
    "storage_account_name": {
        "type" : "string",
        "value": "[variables('diagnosticsStorageAccountName')]"
    }
  }
}
